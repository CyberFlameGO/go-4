# Travis configuration for go
#
# See README for more information about this repository.
#
# This repository does NOT do any deployments or installs.  However,
# it includes a lot of integration tests, which often require
# credentials.
#
#  * decrypt service account credentials
#  * install the Google Cloud SDK command line tools (gcloud)
#  * cache the gcloud installation and setup
#  * test and build the go code
#
language: go

before_install:
# Coverage tools
- go get github.com/mattn/goveralls
- go get github.com/wadey/gocovmerge

# Install gcloud, for integration tests.
- $TRAVIS_BUILD_DIR/travis/install_gcloud.sh
- source "${HOME}/google-cloud-sdk/path.bash.inc"

# Install test credentials.
# Note that anyone with github ACLs to push to a branch can hack .travis.yml
# and discover these credentials in the travis logs.
- echo $TEST_SERVICE_ACCOUNT_mlab_testing | base64 -d > travis-testing.key
- gcloud auth activate-service-account --key-file=travis-testing.key

- echo Branch is ${TRAVIS_BRANCH} and Tag is $TRAVIS_TAG

- echo EVENT_TYPE is ${TRAVIS_EVENT_TYPE}
- if [[ ${TRAVIS_EVENT_TYPE} == cron ]]; then TEST_TAGS=integration; fi;
- echo TEST_TAGS is ${TEST_TAGS}

# These directories will be cached on successful "script" builds, and restored,
# if available, to save time on future builds.
cache:
  directories:
  - "$HOME/google-cloud-sdk/"

script:
# This script replaces / with ___ in the coverage file names. If you have
# two modules, one named x/y and one named x___y, then this will break. But
# don't put triple underscores in a module name: That's bad practice anyway.
# We skip the internal and bigquery code copied/adapted from from cloud.google.com.
- for module in $(find * -type d |
                  grep -v '^git-hooks$' |
                  grep -v '^internal' |
                  grep -v 'from-bigquery' |
                  grep -v '^travis$'); do
    go test -v -covermode=count -coverprofile=${module#/#___}.cov ./$module ;
  done
# run integration tests for bqext and dataset
- go test -covermode=count -coverprofile=_bqext.cov -v ./bqext -tags=$TEST_TAGS
- go test -covermode=count -coverprofile=_dataset.cov -v ./dataset -tags=$TEST_TAGS

# Coveralls
# This will fail if you name a module ___merge, so don't do that.
- $HOME/gopath/bin/gocovmerge *.cov > ___merge.cov
- $HOME/gopath/bin/goveralls -coverprofile=___merge.cov -service=travis-ci
